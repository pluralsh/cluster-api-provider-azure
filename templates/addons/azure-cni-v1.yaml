apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: azure-cni
  name: azure-cni
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: azure-cni
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      labels:
        k8s-app: azure-cni
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - image: mcr.microsoft.com/oss/kubernetes/pause:3.6
        name: pause
      hostNetwork: true
      initContainers:
      - args:
        - deploy
        - azure-vnet
        - -o
        - /opt/cni/bin/azure-vnet
        - azure-vnet-ipam
        - -o
        - /opt/cni/bin/azure-vnet-ipam
        - azure-vnet-telemetry
        - -o
        - /opt/cni/bin/azure-vnet-telemetry
        - azure.conflist
        - -o
        - /etc/cni/net.d/10-azure.conflist
        command:
        - /dropgz
        image: mcr.microsoft.com/containernetworking/cni-dropgz:v0.0.4
        imagePullPolicy: Always
        name: azure-cni
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-bin
        - mountPath: /etc/cni/net.d
          name: cni-conflist
      priorityClassName: system-node-critical
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /etc/cni/net.d
          type: Directory
        name: cni-conflist
      - hostPath:
          path: /opt/cni/bin
          type: Directory
        name: cni-bin
